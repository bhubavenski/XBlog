datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

// prisma repo generator
model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  password  String
  firstName String?
  lastName  String?
  posts     Post[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  image     String?
}

model Post {
  id        String    @id @default(uuid())
  title     String
  content   String
  excerpt   String
  author    User?     @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId  String?
  comments  Comment[]
  tags      Tag[]     @relation("PostTags")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  post      Post      @relation(fields: [postId], references: [id])
  postId    String
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  likes     Int       @default(0)
  disLikes  Int       @default(0)
  createdAt DateTime  @default(now())
  parentId  String?
  parent    Comment?  @relation("CommentToComment", fields: [parentId], references: [id], onDelete: Cascade)
  replies   Comment[] @relation("CommentToComment")
}

model Tag {
  id         String @id @default(uuid())
  name       String @unique
  posts      Post[] @relation("PostTags")
  popularity Int    @default(0)
}
