diff --git a/commits.txt b/commits.txt
index 5a43283..e69de29 100644
--- a/commits.txt
+++ b/commits.txt
@@ -1,164 +0,0 @@
-diff --git a/.storybook/preview.ts b/.storybook/preview.ts
-index 37914b1..a814e5b 100644
---- a/.storybook/preview.ts
-+++ b/.storybook/preview.ts
-@@ -1,3 +1,5 @@
-+import '../src/app/globals.css'
-+
- import type { Preview } from "@storybook/react";
- 
- const preview: Preview = {
-diff --git a/src/app/(main)/posts/[id]/page.tsx b/src/app/(main)/posts/[id]/page.tsx
-index ec190e6..5fe1990 100644
---- a/src/app/(main)/posts/[id]/page.tsx
-+++ b/src/app/(main)/posts/[id]/page.tsx
-@@ -6,7 +6,7 @@ import { Separator } from '@/components/ui/separator';
- import { useParams } from 'next/navigation';
- import { useGetPostByIdQuery } from '@/lib/features/posts/posts.slice';
- import CommentsSection from '@/components/posts/id/comment/CommentsSection';
--import Spinner from '@/components/shared/Spinner';
-+import Spinner from '@/components/shared/spinner/Spinner';
- 
- export default function Page() {
-   const params: { id: string } = useParams();
-diff --git a/src/components/home/RecentPostPreviewList.tsx b/src/components/home/RecentPostPreviewList.tsx
-index 12cd9e7..cac145e 100644
---- a/src/components/home/RecentPostPreviewList.tsx
-+++ b/src/components/home/RecentPostPreviewList.tsx
-@@ -13,7 +13,7 @@ import {
- } from '../ui/card';
- import { useGetPostsQuery } from '@/lib/features/posts/posts.slice';
- import Link from 'next/link';
--import Spinner from '../shared/Spinner';
-+import Spinner from '../shared/spinner/Spinner';
- 
- export default function RecentPostPreviewList() {
-   const { data, isLoading } = useGetPostsQuery({
-diff --git a/src/components/posts/id/comment/CommentForm.tsx b/src/components/posts/id/comment/CommentForm.tsx
-index 6bc310f..2d39e74 100644
---- a/src/components/posts/id/comment/CommentForm.tsx
-+++ b/src/components/posts/id/comment/CommentForm.tsx
-@@ -6,7 +6,7 @@ import { Button } from '../../../ui/button';
- import useAutoResizeHeight from '@/hooks/useAutoResizeHeight';
- import { cn, getErrorMessage } from '@/lib/utils';
- import { useToastContext } from '@/contexts/toast.context';
--import Spinner from '@/components/shared/Spinner';
-+import Spinner from '@/components/shared/spinner/Spinner';
- 
- type CommentFormProps = {
-   autoFocus?: boolean;
-@@ -99,7 +99,7 @@ export default function CommentForm({
-           >
-             {loading ? (
-               <div className="flex items-center gap-1">
--                <Spinner className='size-3'/>
-+                <Spinner className="size-3" />
-                 Posting...
-               </div>
-             ) : (
-diff --git a/src/components/posts/id/comment/CommentsSection.tsx b/src/components/posts/id/comment/CommentsSection.tsx
-index e0a81ab..e2da1ad 100644
---- a/src/components/posts/id/comment/CommentsSection.tsx
-+++ b/src/components/posts/id/comment/CommentsSection.tsx
-@@ -8,7 +8,7 @@ import {
-   useGetCommentsQuery,
- } from '@/lib/features/comments/comment.slice';
- import { useSession } from 'next-auth/react';
--import Spinner from '@/components/shared/Spinner';
-+import Spinner from '@/components/shared/spinner/Spinner';
- import ErrorMessage from '@/components/auth/error-message';
- 
- export default function CommentsSection({ postId }: { postId: string }) {
-diff --git a/src/components/profile/NotificationsForm.tsx b/src/components/profile/NotificationsForm.tsx
-index 1e43b05..b71db76 100644
---- a/src/components/profile/NotificationsForm.tsx
-+++ b/src/components/profile/NotificationsForm.tsx
-@@ -12,7 +12,7 @@ import {
- import { Switch } from '@/components/ui/switch';
- import { useSession } from 'next-auth/react';
- import { useForm } from 'react-hook-form';
--import Spinner from '../shared/Spinner';
-+import Spinner from '../shared/spinner/Spinner';
- import {
-   FormField,
-   FormItem,
-diff --git a/src/components/profile/PersonalInfoForm.tsx b/src/components/profile/PersonalInfoForm.tsx
-index fff4964..3d2fa1e 100644
---- a/src/components/profile/PersonalInfoForm.tsx
-+++ b/src/components/profile/PersonalInfoForm.tsx
-@@ -24,7 +24,7 @@ import {
-   PersonalInfoSchema,
-   PersonalInfoValues,
- } from '@/resolvers/forms/personal-info-form.resolver';
--import Spinner from '@/components/shared/Spinner';
-+import Spinner from '@/components/shared/spinner/Spinner';
- import { useSession } from 'next-auth/react';
- import { Textarea } from '@/components/ui/textarea';
- import { LANGUAGES } from '@/constants';
-@@ -256,7 +256,7 @@ export default function PersonalInfoForm() {
-                 </FormItem>
-               )}
-             />
--            <div className='mt-auto h-full'>
-+            <div className="mt-auto h-full">
-               <Button
-                 type="submit"
-                 disabled={isUpdateUserDataLoading}
-@@ -264,8 +264,8 @@ export default function PersonalInfoForm() {
-               >
-                 {isUpdateUserDataLoading ? 'Updating...' : 'Update'}
-               </Button>
--              {success && <SuccessMessage message={success} className='mt-3'/>}
--              {error && <ErrorMessage message={error} className='mt-3'/>}
-+              {success && <SuccessMessage message={success} className="mt-3" />}
-+              {error && <ErrorMessage message={error} className="mt-3" />}
-             </div>
-           </form>
-         </Form>
-diff --git a/src/components/profile/SecurityForm.tsx b/src/components/profile/SecurityForm.tsx
-index 1b646ff..c51f905 100644
---- a/src/components/profile/SecurityForm.tsx
-+++ b/src/components/profile/SecurityForm.tsx
-@@ -18,7 +18,7 @@ import {
-   FormMessage,
-   Form,
- } from '../ui/form';
--import Spinner from '../shared/Spinner';
-+import Spinner from '../shared/spinner/Spinner';
- import { SubmitHandler, useForm } from 'react-hook-form';
- import { useSession } from 'next-auth/react';
- import {
-diff --git a/src/components/shared/Spinner.tsx b/src/components/shared/Spinner.tsx
-deleted file mode 100644
-index 7a54a8b..0000000
---- a/src/components/shared/Spinner.tsx
-+++ /dev/null
-@@ -1,28 +0,0 @@
--import { cn } from '@/lib/utils';
--import React from 'react';
--
--export default function Spinner({ className }: { className?: string }) {
--  return (
--    <div role="status">
--      <svg
--        aria-hidden="true"
--        className={cn(
--          'size-8 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600',
--          className
--        )}
--        viewBox="0 0 100 101"
--        fill="none"
--        xmlns="http://www.w3.org/2000/svg"
--      >
--        <path
--          d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
--          fill="currentColor"
--        />
--        <path
--          d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
--          fill="currentFill"
--        />
--      </svg>
--    </div>
--  );
--}
diff --git a/package.json b/package.json
index e3bfb98..d1d1e91 100644
--- a/package.json
+++ b/package.json
@@ -33,6 +33,8 @@
     "@radix-ui/react-tabs": "^1.1.0",
     "@radix-ui/react-toast": "^1.2.1",
     "@reduxjs/toolkit": "^2.2.7",
+    "@storybook/testing-library": "^0.2.2",
+    "@types/testing-library__jest-dom": "^6.0.0",
     "axios": "^1.7.4",
     "bcryptjs": "^2.4.3",
     "class-variance-authority": "^0.7.0",
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index 3a061ff..4354f00 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -59,6 +59,12 @@ importers:
       '@reduxjs/toolkit':
         specifier: ^2.2.7
         version: 2.2.7(react-redux@9.1.2(@types/react@18.3.3)(react@18.3.1)(redux@5.0.1))(react@18.3.1)
+      '@storybook/testing-library':
+        specifier: ^0.2.2
+        version: 0.2.2
+      '@types/testing-library__jest-dom':
+        specifier: ^6.0.0
+        version: 6.0.0
       axios:
         specifier: ^1.7.4
         version: 1.7.4
@@ -2303,6 +2309,10 @@ packages:
     peerDependencies:
       storybook: ^8.3.4
 
+  '@storybook/testing-library@0.2.2':
+    resolution: {integrity: sha512-L8sXFJUHmrlyU2BsWWZGuAjv39Jl1uAqUHdxmN42JY15M4+XCMjGlArdCCjDe1wpTSW6USYISA9axjZojgtvnw==}
+    deprecated: In Storybook 8, this package functionality has been integrated to a new package called @storybook/test, which uses Vitest APIs for an improved experience. When upgrading to Storybook 8 with 'npx storybook@latest upgrade', you will get prompted and will get an automigration for the new package. Please migrate when you can.
+
   '@storybook/theming@8.3.4':
     resolution: {integrity: sha512-D4XVsQgTtpHEHLhwkx59aGy1GBwOedVr/mNns7hFrH8FjEpxrrWCuZQASq1ZpCl8LXlh7uvmT5sM2rOdQbGuGg==}
     peerDependencies:
@@ -2318,6 +2328,10 @@ packages:
     resolution: {integrity: sha512-pemlzrSESWbdAloYml3bAJMEfNh1Z7EduzqPKprCH5S341frlpYnUEW0H72dLxa6IsYr+mPno20GiSm+h9dEdQ==}
     engines: {node: '>=18'}
 
+  '@testing-library/dom@9.3.4':
+    resolution: {integrity: sha512-FlS4ZWlp97iiNWig0Muq8p+3rVDjRiYE+YKGbAqXOu9nwJFFOdL00kFpz42M+4huzYi86vAK1sOOfyOG45muIQ==}
+    engines: {node: '>=14'}
+
   '@testing-library/jest-dom@6.5.0':
     resolution: {integrity: sha512-xGGHpBXYSHUUr6XsKBfs85TWlYKpTc37cSBBVrXcib2MkHLboWlkClhWF37JKlDb9KEq3dHs+f2xR7XJEWGBxA==}
     engines: {node: '>=14', npm: '>=6', yarn: '>=1'}
@@ -2489,6 +2503,10 @@ packages:
   '@types/stack-utils@2.0.3':
     resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}
 
+  '@types/testing-library__jest-dom@6.0.0':
+    resolution: {integrity: sha512-bnreXCgus6IIadyHNlN/oI5FfX4dWgvGhOPvpr7zzCYDGAPIfvyIoAozMBINmhmsVuqV0cncejF2y5KC7ScqOg==}
+    deprecated: This is a stub types definition. @testing-library/jest-dom provides its own type definitions, so you do not need this installed.
+
   '@types/testing-library__user-event@4.2.0':
     resolution: {integrity: sha512-vHuDMJY+UooghUtgFX+OucrhQWLLNUwgSOyvVkHNr+5gYag3a7xVkWNF0hyZID/+qHNw87wFqM/5uagFZ5eQIg==}
     deprecated: This is a stub types definition. testing-library__user-event provides its own type definitions, so you do not need this installed.
@@ -8875,6 +8893,12 @@ snapshots:
       storybook: 8.3.4
       util: 0.12.5
 
+  '@storybook/testing-library@0.2.2':
+    dependencies:
+      '@testing-library/dom': 9.3.4
+      '@testing-library/user-event': 14.5.2(@testing-library/dom@9.3.4)
+      ts-dedent: 2.2.0
+
   '@storybook/theming@8.3.4(storybook@8.3.4)':
     dependencies:
       storybook: 8.3.4
@@ -8897,6 +8921,17 @@ snapshots:
       lz-string: 1.5.0
       pretty-format: 27.5.1
 
+  '@testing-library/dom@9.3.4':
+    dependencies:
+      '@babel/code-frame': 7.24.7
+      '@babel/runtime': 7.25.0
+      '@types/aria-query': 5.0.4
+      aria-query: 5.1.3
+      chalk: 4.1.2
+      dom-accessibility-api: 0.5.16
+      lz-string: 1.5.0
+      pretty-format: 27.5.1
+
   '@testing-library/jest-dom@6.5.0':
     dependencies:
       '@adobe/css-tools': 4.4.0
@@ -8921,6 +8956,10 @@ snapshots:
     dependencies:
       '@testing-library/dom': 10.4.0
 
+  '@testing-library/user-event@14.5.2(@testing-library/dom@9.3.4)':
+    dependencies:
+      '@testing-library/dom': 9.3.4
+
   '@tootallnate/once@2.0.0': {}
 
   '@tsconfig/node10@1.0.11': {}
@@ -9080,6 +9119,10 @@ snapshots:
 
   '@types/stack-utils@2.0.3': {}
 
+  '@types/testing-library__jest-dom@6.0.0':
+    dependencies:
+      '@testing-library/jest-dom': 6.5.0
+
   '@types/testing-library__user-event@4.2.0(@testing-library/dom@10.4.0)':
     dependencies:
       '@testing-library/user-event': 14.5.2(@testing-library/dom@10.4.0)
diff --git a/src/app/(main)/create-post/page.tsx b/src/app/(main)/create-post/page.tsx
index 0483224..b99507a 100644
--- a/src/app/(main)/create-post/page.tsx
+++ b/src/app/(main)/create-post/page.tsx
@@ -1,4 +1,4 @@
-import CreatePostForm from '@/lib/features/posts/create-post-form';
+import CreatePostForm from '@/lib/features/posts/create-post-form/create-post-form';
 import React from 'react';
 
 export default function Page() {
diff --git a/src/lib/features/posts/create-post-form.tsx b/src/lib/features/posts/create-post-form.tsx
deleted file mode 100644
index 91b7b52..0000000
--- a/src/lib/features/posts/create-post-form.tsx
+++ /dev/null
@@ -1,263 +0,0 @@
-'use client';
-
-import { zodResolver } from '@hookform/resolvers/zod';
-import { SubmitHandler, useFieldArray, useForm } from 'react-hook-form';
-import { getErrorMessage } from '@/lib/utils';
-import { Button } from '@/components/ui/button';
-import {
-  Form,
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form';
-import {
-  CreatePostValues,
-  CreatePostSchema,
-} from '../../../resolvers/forms/create-post-form.resolver';
-import { Input } from '@/components/ui/input';
-import { useEffect, useState } from 'react';
-import { useToastContext } from '../../../contexts/toast.context';
-import ErrorMessage from '@/components/auth/error-message';
-import SuccessMessage from '@/components/auth/success-message';
-import {
-  Card,
-  CardHeader,
-  CardTitle,
-  CardDescription,
-  CardContent,
-  CardFooter,
-} from '@/components/ui/card';
-import { Delete, Plus } from 'lucide-react';
-import { Badge } from '@/components/ui/badge';
-import { useGetTagsQuery } from '../tags/tags.slice';
-import { useAddPostMutation } from './posts.slice';
-import { Textarea } from '@/components/ui/textarea';
-
-export default function CreatePostForm() {
-  const toast = useToastContext();
-  const [error, setError] = useState<string | null>(null);
-  const [success, setSuccess] = useState<string | null>(null);
-  const {
-    data: tagsList,
-    isLoading: isTagsListLoading,
-    isError,
-    error: queryError,
-  } = useGetTagsQuery();
-
-  const form = useForm<CreatePostValues>({
-    mode: 'onTouched',
-    defaultValues: {
-      tag: '',
-      content: '',
-      title: '',
-      excerpt: '',
-      tags: [],
-    },
-    resolver: zodResolver(CreatePostSchema),
-  });
-  const { fields, append, remove } = useFieldArray({
-    name: 'tags',
-    control: form.control,
-  });
-
-  const { isSubmitting } = form.formState;
-  const [addPost] = useAddPostMutation();
-
-  const handleAddtag: () => void = async () => {
-    const isValid = await form.trigger('tag');
-    if (!isValid) return;
-
-    const tagValue = form.getValues('tag');
-
-    if (tagValue) {
-      append({ name: tagValue });
-      form.resetField('tag');
-    } else {
-      form.trigger('tag');
-    }
-  };
-
-  const handleSuccessSubmit: SubmitHandler<CreatePostValues> = async (
-    formData
-  ) => {
-    setError(null);
-    setSuccess(null);
-
-    try {
-      const result = await addPost(formData).unwrap();
-      console.log(result);
-      setSuccess('Post created successfully');
-    } catch (error) {
-      const message = getErrorMessage(error);
-      setError(message);
-    }
-  };
-
-  const handleErrorSubmit = () => {
-    if (fields.length === 0) {
-      form.setError('tag', {
-        type: 'custom',
-        message: 'you should provide tag',
-      });
-    }
-  };
-
-  useEffect(() => {
-    if (isError && queryError && 'data' in queryError) {
-      toast({
-        variant: 'destructive',
-        title: 'Uh oh! Something went wrong.',
-        description: (queryError.data as { error: string }).error,
-      });
-    } else if (isError) {
-      toast({
-        variant: 'destructive',
-        title: 'Uh oh! Something went wrong.',
-        description: 'An unexpected error occurred.',
-      });
-    }
-  }, [isError, queryError, toast]);
-  console.log(tagsList)
-  return (
-    <Card className='w-full'>
-      <CardHeader>
-        <CardTitle>Create New Post</CardTitle>
-        <CardDescription>
-          Fill out the form to create a new blog post.
-        </CardDescription>
-      </CardHeader>
-      <CardContent >
-        <Form {...form}>
-          <form
-            onSubmit={form.handleSubmit(handleSuccessSubmit, handleErrorSubmit)}
-            className="space-y-4 w-full"
-          >
-            <FormField
-              control={form.control}
-              name="title"
-              render={({ field }) => (
-                <FormItem>
-                  <FormLabel>Title</FormLabel>
-                  <FormControl>
-                    <Input placeholder="title..." {...field} />
-                  </FormControl>
-                  <FormMessage />
-                </FormItem>
-              )}
-            />
-            <FormField
-              control={form.control}
-              name="content"
-              render={({ field }) => (
-                <FormItem>
-                  <FormLabel>Content</FormLabel>
-                  <FormControl>
-                    <Textarea placeholder="content..." {...field} />
-                  </FormControl>
-                  <FormMessage />
-                </FormItem>
-              )}
-            />
-            <FormField
-              control={form.control}
-              name="excerpt"
-              render={({ field }) => (
-                <FormItem>
-                  <FormLabel>Excerpt</FormLabel>
-                  <FormControl>
-                    <Textarea placeholder="excerpt..." {...field} />
-                  </FormControl>
-                  <FormDescription>
-                    Shor summary of the content. Its used like a preview of the
-                    post
-                  </FormDescription>
-                  <FormMessage />
-                </FormItem>
-              )}
-            />
-
-            <FormField
-              control={form.control}
-              name="tag"
-              render={({ field }) => (
-                <FormItem>
-                  <FormLabel htmlFor="tagInput">tag</FormLabel>
-                  <FormControl>
-                    <div className="relative flex gap-1">
-                      <Input
-                        {...field}
-                        id="tagInput"
-                        list="tag-suggestions"
-                        placeholder={
-                          isTagsListLoading
-                            ? 'tag list is loading...'
-                            : 'Select tag'
-                        }
-                        disabled={isTagsListLoading}
-                        onKeyDown={(e) => {
-                          if (e.key === 'Enter') {
-                            e.preventDefault(); // ?????????????????????????? ???????????????????????? ?????????????????? ???? ?????????????? ?????? Enter
-                            handleAddtag();
-                          }
-                        }}
-                      />
-                      <datalist id="tag-suggestions">
-                        {tagsList &&
-                          tagsList.map((tag) => (
-                            <option value={tag.name} key={tag.id} />
-                          ))}
-                      </datalist>
-                      <Button
-                        type="button"
-                        onClick={handleAddtag}
-                        variant="outline"
-                      >
-                        <Plus width={20} height={20} className="mr-2" />
-                        Add tag
-                      </Button>
-                    </div>
-                  </FormControl>
-                  <FormDescription>
-                    Add at least one tag. You can also press Enter instead of
-                    the Add tag button
-                  </FormDescription>
-                  <FormMessage />
-                </FormItem>
-              )}
-            />
-            <div className="mt-2 flex flex-wrap gap-2">
-              {fields.map((field, index) => (
-                <Badge
-                  key={field.id}
-                  className="mr-2 py-2 flex items-center gap-2"
-                  variant="outline"
-                >
-                  {field.name}
-                  <Delete
-                    onClick={() => remove(index)}
-                    width={20}
-                    height={20}
-                    className="cursor-pointer text-destructive"
-                  />
-                </Badge>
-              ))}
-            </div>
-            <SuccessMessage message={success} />
-            <ErrorMessage message={error} />
-            <Button
-              type="submit"
-              disabled={isSubmitting || isTagsListLoading}
-              className="bg-[#4070F4] w-full"
-            >
-              Submit
-            </Button>
-          </form>
-        </Form>
-      </CardContent>
-      <CardFooter className=""></CardFooter>
-    </Card>
-  );
-}
\ No newline at end of file
